{"version":3,"file":"component---src-templates-post-template-post-template-tsx-12e1fabba17235f88b16.js","mappings":"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","sources":["webpack://gatsby-starter-lumen/./src/components/Button/Button.tsx","webpack://gatsby-starter-lumen/./src/components/Button/Button.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Author/Author.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Author/Author.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Content/Content.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Content/Content.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Meta/Meta.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Meta/Meta.module.scss","webpack://gatsby-starter-lumen/./src/components/Post/Tags/Tags.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Tags/Tags.module.scss","webpack://gatsby-starter-lumen/./src/components/Utterance/Utterance.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Post.tsx","webpack://gatsby-starter-lumen/./src/components/Post/Post.module.scss","webpack://gatsby-starter-lumen/./src/templates/PostTemplate/PostTemplate.tsx"],"sourcesContent":["import React from \"react\";\n\nimport cn from \"classnames\";\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./Button.module.scss\";\n\ninterface Props {\n  className?: string;\n  title: string;\n  to: string;\n}\n\nconst Button: React.FC<Props> = ({ className, title, to }: Props) => (\n  <Link className={cn(styles.button, className)} to={to}>\n    {title}\n  </Link>\n);\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport var button = \"Button-module--button--b1113\";","import React from \"react\";\n\nimport { useSiteMetadata } from \"@/hooks\";\nimport { getContactHref } from \"@/utils\";\n\nimport * as styles from \"./Author.module.scss\";\n\nconst Author = () => {\n  const { author } = useSiteMetadata();\n\n  return (\n    <div className={styles.author}>\n      <p className={styles.bio}>{author.bio}</p>\n    </div>\n  );\n};\n\nexport default Author;\n","// extracted by mini-css-extract-plugin\nexport var author = \"Author-module--author--1c58d\";\nexport var bio = \"Author-module--bio--08950\";\nexport var twitter = \"Author-module--twitter--90647\";","import React from \"react\";\n\nimport * as styles from \"./Content.module.scss\";\n\ninterface Props {\n  title: string;\n  body: string;\n}\n\nconst Content: React.FC<Props> = ({ body, title }: Props) => (\n  <div className={styles.content}>\n    <h1 className={styles.title}>{title}</h1>\n    <div className={styles.body} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\nexport default Content;\n","// extracted by mini-css-extract-plugin\nexport var body = \"Content-module--body--726c2\";\nexport var content = \"Content-module--content--80d58\";\nexport var title = \"Content-module--title--09504\";","import React from \"react\";\n\nimport * as styles from \"./Meta.module.scss\";\n\ninterface Props {\n  date: string;\n}\n\nconst Meta: React.FC<Props> = ({ date }: Props) => (\n  <div className={styles.meta}>\n    <p className={styles.date}>\n      Published{\" \"}\n      {new Date(date).toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      })}\n    </p>\n  </div>\n);\n\nexport default Meta;\n","// extracted by mini-css-extract-plugin\nexport var date = \"Meta-module--date--4d30d\";\nexport var meta = \"Meta-module--meta--dae0a\";","import React from \"react\";\n\nimport { Button } from \"@/components/Button\";\n\nimport * as styles from \"./Tags.module.scss\";\n\ntype Props = {\n  tags: string[];\n  tagSlugs: string[];\n};\n\nconst Tags = ({ tags, tagSlugs }: Props) => (\n  <div className={styles.tags}>\n    <ul className={styles.list}>\n      {tagSlugs\n        ? tagSlugs.map((slug, i) => (\n            <li className={styles.item} key={slug}>\n              <Button title={tags[i]} key={slug} to={slug} />\n            </li>\n          ))\n        : null}\n    </ul>\n  </div>\n);\n\nexport default Tags;\n","// extracted by mini-css-extract-plugin\nexport var item = \"Tags-module--item--52015\";\nexport var list = \"Tags-module--list--82ae6\";\nexport var tags = \"Tags-module--tags--18589\";","import React, { createRef, useLayoutEffect } from \"react\";\n\nconst src = \"https://utteranc.es/client.js\";\n\nexport interface IUtterancesProps {\n  repo: string;\n  issueTerm: string;\n  theme?: string;\n}\n\nconst Utterances: React.FC<IUtterancesProps> = React.memo(\n  ({ repo, issueTerm, theme }) => {\n    const containerRef = createRef<HTMLDivElement>();\n\n    useLayoutEffect(() => {\n      const utterances = document.createElement(\"script\");\n\n      const attributes = {\n        src,\n        repo,\n        theme: theme || \"preferred-color-scheme\",\n        \"issue-term\": issueTerm,\n        crossOrigin: \"anonymous\",\n        async: \"true\",\n      };\n\n      Object.entries(attributes).forEach(([key, value]) => {\n        utterances.setAttribute(key, value);\n      });\n\n      containerRef.current!.appendChild(utterances);\n    }, [repo]);\n\n    return <div ref={containerRef} />;\n  },\n);\n\nUtterances.displayName = \"Utterances\";\n\nexport default Utterances;\n","import React from \"react\";\n\nimport { Button } from \"@/components/Button\";\nimport { ThemeSwitcher } from \"@/components/ThemeSwitcher\";\nimport type { Node } from \"@/types\";\n\nimport { Author } from \"./Author\";\nimport { Image } from \"@/components/Image\";\nimport { Content } from \"./Content\";\nimport { Meta } from \"./Meta\";\nimport { Tags } from \"./Tags\";\n\nimport * as styles from \"./Post.module.scss\";\nimport Utterances from \"../Utterance/Utterance\";\nimport { useTheme } from \"@/hooks\";\n\ninterface Props {\n  post: Node;\n}\n\nconst Post: React.FC<Props> = ({ post }: Props) => {\n  const { html } = post;\n  const { tagSlugs, slug } = post.fields;\n  const { tags, title, date } = post.frontmatter;\n  // import mode only\n  const [{ mode }] = useTheme();\n\n  // slug /posts/2017-19-08---Humane-Typography-in-the-Digital-Age//posts/hello-world\n  // -> hello-world\n  const simpleSlug = \"/\" + slug.split(\"//\")[1];\n\n  return (\n    <div className={styles.post}>\n      <div className={styles.buttons}>\n        <Button className={styles.buttonArticles} title=\"All Articles\" to=\"/\" />\n        <ThemeSwitcher />\n      </div>\n\n      <div className={styles.post_header}>\n        <Image\n          alt=\"header-image\"\n          path={post.frontmatter.socialImage.relativePath}\n          className={styles.header_image}\n        />\n        <Image\n          alt=\"header-image-background\"\n          path={post.frontmatter.socialImage.relativePath}\n          className={styles.header_image_background}\n        />\n      </div>\n\n      <div className={styles.content}>\n        <Content body={html} title={title} />\n      </div>\n\n      <div className={styles.footer}>\n        <Meta date={date} />\n        {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />}\n        <Author />\n      </div>\n\n      {/* <div className={styles.comments}>\n        <Comments postSlug={slug} postTitle={post.frontmatter.title} />\n      </div> */}\n      <Utterances\n        repo=\"esc5221/blog_comment\"\n        issueTerm={simpleSlug}\n        theme={mode === \"dark\" ? \"dark-blue\" : \"github-light\"}\n      />\n      {/* <div className={styles.footer}>\n        <Meta date={date} />\n        {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />}\n        <Author />\n      </div> */}\n      <div style={{ marginBottom: \"30rem\" }}></div>\n    </div>\n  );\n};\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport var buttonArticles = \"Post-module--buttonArticles--d793a\";\nexport var buttons = \"Post-module--buttons--2972d\";\nexport var comments = \"Post-module--comments--d3b99\";\nexport var content = \"Post-module--content--3c6e5\";\nexport var footer = \"Post-module--footer--f8705\";\nexport var header_image = \"Post-module--header_image--07acd\";\nexport var header_image_background = \"Post-module--header_image_background--21731\";\nexport var post = \"Post-module--post--3a994\";\nexport var post_header = \"Post-module--post_header--c6824\";","import React from \"react\";\n\nimport { graphql } from \"gatsby\";\n\nimport { Layout } from \"@/components/Layout\";\nimport { Meta } from \"@/components/Meta\";\nimport { Sidebar } from \"@/components/Sidebar\";\nimport { Page } from \"@/components/Page\";\nimport { Post } from \"@/components/Post\";\nimport { useSiteMetadata } from \"@/hooks\";\nimport { Node } from \"@/types\";\n\ninterface Props {\n  data: {\n    markdownRemark: Node;\n  };\n}\n\nconst PostTemplate: React.FC<Props> = ({ data: { markdownRemark } }: Props) => (\n  <Layout>\n    <Post post={markdownRemark} />\n  </Layout>\n);\n\nexport const query = graphql`\n  query PostTemplate($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n        socialImage {\n          publicURL\n          relativePath\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: React.FC<Props> = ({ data }) => {\n  const { title, subtitle, url } = useSiteMetadata();\n\n  const {\n    frontmatter: {\n      title: postTitle,\n      description: postDescription = \"\",\n      socialImage,\n    },\n  } = data.markdownRemark;\n\n  const description = postDescription || subtitle;\n  const image = socialImage?.publicURL && url.concat(socialImage?.publicURL);\n\n  return (\n    <Meta\n      title={`${postTitle} - ${title}`}\n      description={description}\n      image={image}\n    />\n  );\n};\n\nexport default PostTemplate;\n"],"names":["_ref","className","title","to","React","Link","cn","author","useSiteMetadata","bio","body","dangerouslySetInnerHTML","__html","date","Date","toLocaleDateString","year","month","day","tags","tagSlugs","map","slug","i","key","Button","Utterances","repo","issueTerm","theme","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","crossOrigin","async","Object","entries","forEach","_ref2","value","setAttribute","current","appendChild","ref","displayName","post","html","fields","frontmatter","mode","useTheme","simpleSlug","split","ThemeSwitcher","Image","alt","path","socialImage","relativePath","Content","Meta","Tags","Author","style","marginBottom","Head","data","subtitle","url","postTitle","description","postDescription","markdownRemark","image","publicURL","concat","Layout","Post"],"sourceRoot":""}